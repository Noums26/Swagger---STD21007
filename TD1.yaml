openapi: 3.0.1
info:
  title: STD21007
  description: 'Hello World!'
  version: 1.0.0
servers:
- url: https://std21007.com
tags:
- name: Students
- name: Courses
paths:
  /students:
    get:
      tags:
      - Students
      summary: Get all students
      description: Get all students with details
      parameters:
        - name: page
          in: query
          style: form
          explode: true
          schema:
            type: integer
        - name: page_size
          in: query
          style: form
          explode: true
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'

        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          
    post:
      tags:
        - Students
      summary: Create new students
      description: Create new students from an array
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateStudent'
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
                      
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
                
    put:
      tags:
        - Students
      summary: Update student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        200:
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
                
    patch:
      tags:
        - Students
      summary: Update student
      description: |
        Possible updates on:
        * name: change
        * address: change
        * birth_date: change
        * phoneNumbers: add
      operationId: patchStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
            examples:
              changeName:
                summary: Change name
                description: How to change name and that it does
                value:
                  id: 1
                  name: "New value"
              changeAddress:
                summary: Change address
                value:
                  id: 1
                  adress: "New value"
              changeNameAndAddress:
                summary: Change name and address but not all
                value:
                  id: 1
                  name: "New value"
                  address: "New value"
              addNewPhoneNumbers:
                summary: add new phone numbers
                value:
                  id: 1
                  phoneNumbers:
                  - number: '0322165498'
                    country_code: '261'
                  - number: '0334578963'
                    country_code: '261'
      responses:
        200:
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
                
  /students/{id}:
    get:
      tags:
      - Students
      summary: Get all students
      description: Get all students with details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Student'

        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          
    delete:
      tags:
      - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Ressource deleted

        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          
  /courses:
    get:
      tags:
      - Courses
      summary: Get all courses
      parameters:
        - name: page
          in: query
          style: form
          explode: true
          schema:
            type: integer
        - name: page_size
          in: query
          style: form
          explode: true
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'

        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          
    post:
      tags:
        - Courses
      summary: Create new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCourse'
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'
                      
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
                
    put:
      tags:
        - Courses
      summary: Update course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses'
      responses:
        200:
          description: course updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
                
    patch:
      tags:
        - Courses
      summary: Update course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses'
      responses:
        200:
          description: course updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          
  /courses/{id}:
    get:
      tags:
      - Courses
      summary: Get course
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'

        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          
    delete:
      tags:
      - Courses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Ressource deleted

        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
                      
components:
  schemas:
    PhoneNumber:
      type: object
      properties:
        number: 
          type: string
          example: '0341245678'
        country_code: 
          type: string
          example: '261'
    CreateStudent:
      type: object
      properties:
        name:
          type: string
        birth_date:
          type: string
          format: date
          example: "2022-01-01"
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
    Student:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
    CreateCourse:
      type: object
      properties:
        code:
          type: string
          example: PROG1
        name:
          type: string
          example: Algorithm
        teacher:
          type: string
          example: Tokimahery RAMAROZAKA
        created_date:
          type: string
          format: date
          example: "2022-01-01"
    Courses:
      allOf:
      - $ref: '#/components/schemas/CreateCourse'
      type: object
      properties:
        id: 
          type: integer
          
    BadRequest:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: 'Bad request'
 
